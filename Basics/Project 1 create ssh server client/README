# Project 1: Create SSH Server & Client using Docker

## 📌 Overview
This project demonstrates how to set up an SSH server and client using Docker containers. The SSH server allows secure remote access, and the client container can be used to connect to it.

## 🚀 Getting Started
### Steps to Set Up SSH Server

1️⃣ Run Docker Desktop.

2️⃣ Open a terminal and run the following command to create and start a new Ubuntu container:
```bash
docker run -it --name container1 ubuntu:22.04
```

3️⃣ Inside the container, update package lists:
![Step 3](././images/step3.png)
```bash
apt-get update
```

4️⃣ Install OpenSSH Server and Nano editor:
![Step 4](./images/step4.png)
```bash
apt-get install openssh-server -y
apt-get install nano -y
```

5️⃣ Edit SSH configuration:
![Step 5](./images/step5.png)
```bash
nano /etc/ssh/sshd_config
```
Under the **Authentication** section, modify:
```plaintext
PermitRootLogin yes
```
Save and exit.

6️⃣ Start SSH service:
![Step 6](./images/step6.png)
```bash
service ssh start
```

7️⃣ Set a password for root user:
```bash
passwd
```
Enter a new password when prompted.

8️⃣ Open a new terminal and install OpenSSH Client:
![Step 8](./images/step8.png)
```bash
apt-get install openssh-client -y
```

9️⃣ Find the IP address of container1:
![Step 9](./images/step9.png)
- **Windows:**
```powershell
docker inspect container1 |Select-String "IPAddress"
```
- **Linux:**
```bash
docker inspect container1 |grep IPAddress
```
Copy the IP address.

🔟 Connect from container2 to container1 using SSH:
```bash
![Step 10](./images/step10.png)
ssh [IP address of container1]
```

## 📷 Step-by-Step Images
Images for each step can be found in the `images/` directory.

## 🛑 Stopping & Removing Containers
```bash
docker stop container1 && docker rm container1
```

## 🤝 Contributing
Feel free to open issues or submit pull requests to enhance the project!

## 📜 License
This project is licensed under the [MIT License](../../LICENSE).

Happy Dockering! 🐳
